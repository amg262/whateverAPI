### Use variables from http-client.env.json and http-client.private.env.json
@baseUrl = {{baseUrl}}

### Authentication Endpoints
### Login - Get JWT Token
POST {{baseUrl}}/api/user/login
Content-Type: application/json

{
    "username": "{{testUser.username}}",
    "email": "{{testUser.email}}",
    "password": "{{testUser.password}}"
}

### Logout
POST {{baseUrl}}/api/user/logout
Authorization: Bearer {{authToken}}

### Basic CRUD Operations
### Get All Jokes
GET {{baseUrl}}/api/jokes
Authorization: Bearer {{authToken}}

### Get Specific Joke by ID
GET {{baseUrl}}/api/jokes/{{jokeId}}
Authorization: Bearer {{authToken}}

### Create New Joke
POST {{baseUrl}}/api/jokes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content": "Why did the developer quit his job? He didn't get arrays!",
  "type": "Programming",
  "tags": ["programming", "work"],
  "laughScore": 0
}

### Update Existing Joke
PUT {{baseUrl}}/api/jokes/{{jokeId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content": "Updated joke content",
  "type": "Programming",
  "tags": ["programming", "updated"],
  "laughScore": 5
}

### Delete Joke
DELETE {{baseUrl}}/api/jokes/{{jokeId}}
Authorization: Bearer {{authToken}}

### Specialized Endpoints
### Get Random Joke 
GET {{baseUrl}}/api/jokes/random
Authorization: Bearer {{authToken}}

### Get Jokes by Type with Filtering
GET {{baseUrl}}/api/jokes/type?type=Joke&pageSize=10&pageNumber=1&sortBy=laughScore&sortDescending=true
Authorization: Bearer {{authToken}}

### Search Jokes
GET {{baseUrl}}/api/jokes/search?q=programmer
Authorization: Bearer {{authToken}}

### Get External Joke
GET {{baseUrl}}/api/jokes/whatever
Authorization: Bearer {{authToken}}

### Error Cases
### Get Non-existent Joke
GET {{baseUrl}}/api/jokes/11111111-1111-1111-1111-111111111111
Authorization: Bearer {{authToken}}

### Create Invalid Joke (Missing Required Fields)
POST {{baseUrl}}/api/jokes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "type": "Programming"
}

### Update Non-existent Joke
PUT {{baseUrl}}/api/jokes/11111111-1111-1111-1111-111111111111
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content": "This joke doesn't exist",
  "type": "Programming"
}

### Get Jokes with Invalid Type
GET {{baseUrl}}/api/jokes/type?type=InvalidType
Authorization: Bearer {{authToken}}

### Get Jokes with Invalid Pagination
GET {{baseUrl}}/api/jokes/type?type=Joke&pageSize=-1&pageNumber=0
Authorization: Bearer {{authToken}}

### Authentication Error Cases
### Login with Invalid Credentials
POST {{baseUrl}}/api/user/login
Content-Type: application/json

{
  "username": "invalid",
  "email": "invalid@example.com",
  "password": "wrong"
}

### Access Protected Route without Token
GET {{baseUrl}}/api/jokes